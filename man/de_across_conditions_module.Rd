% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc_pipeline_modules.R
\name{de_across_conditions_module}
\alias{de_across_conditions_module}
\title{Differential expression analysis across conditions for integrated Seurat objects}
\usage{
de_across_conditions_module(
  sobjint,
  sample_metadata,
  comps,
  grouping_variable,
  Pseudobulk_mode,
  DE_test,
  outdir_int,
  assay,
  slot,
  cluster_prefix,
  crossconditionDE_padj_thres,
  crossconditionDE_lfc_thres,
  crossconditionDE_min.pct
)
}
\arguments{
\item{sobjint}{integrated Seurat object. metadata needs two special columns: one called "Condition" that contains the A vs B conditions, and a second that matches the  \code{grouping_variable} parameter of this function.}

\item{sample_metadata}{data.frame with three columns called Sample, Condition, Code.}

\item{comps}{data.frame with two columns called c1, c2; these are the conditions you want to set up. Should be present in psuedobulk_metadata Condition column.}

\item{grouping_variable}{string, column name of identity in Seurat object meta.data to stratify DE by. For example, clusters or celltype. Will perform A vs B DE in each of these groupings. Default is "seurat_clusters". It is not mandatory, but will use factor level ordering of this variable in the meta.data to control analysis order, and if not will sort by alphanumeric order (cluster 1, then 2, cluster A, then B, etc)}

\item{Pseudobulk_mode}{T/F. Sets the cross-conditional analysis mode. TRUE uses pseudobulk EdgeR for DE testing and propeller for compositional analysis. FALSE uses single-cell wilcox test within Seurat for DE testing and 2-prop Z test within the \code{prop.test()} function for compositional analysis.}

\item{DE_test}{a string, default is 'EdgeR-LRT' when Pseudobulk_mode is set to True, or 'wilcox' when Pseudobulk_mode is False. Can be either "DESeq2", "DESeq2-LRT", "EdgeR", "EdgeR-LRT" for pseudobulk, or any of the tests supported by the "test.use" argument in the FindMarkers function in Seurat; see \code{?Seurat::FindMarkers} for more.}

\item{outdir_int}{string, path to save results to, if not provided will not save. Will create a sub-directory called "differentialexpression_crosscondition" and save inside of there.}

\item{assay}{string, name of Seurat assay to use, default is DefaultAssay(sobjint)}

\item{slot}{string, name of Seurat assay slot to use, default is 'data'}

\item{cluster_prefix}{T/F, whether to append prefix "cluster_" to grouping_variable levels, useful if grouping_variable is a cluster. Rather than saving results with names such as "1", "2", "3", will save as "cluster_1", and so on.}

\item{crossconditionDE_padj_thres}{numeric; adjusted P value maximum threshold for calling DEGs. Only used in counting number of DEGs. Default is 0.1}

\item{crossconditionDE_lfc_thres}{numeric; Log Fold Change magnitude (absolute value) minimum threshold for calling DEGs. Only used in counting number of DEGs. Default is 0.}

\item{crossconditionDE_min.pct}{numeric; Minimum percent of cells expressing gene required to count as a DEG. For positive LFC genes (up in condition A); pct.1 must be at least this value (percent of cells in A must be at least this value); for negative LFC genes, pct.2 cells must be at least this value. Only used for counting DEGs. Default is 0.1 if pseudobulk_edgeR is used; 0 if wilcox is used.}
}
\value{
a complex nested list with several layers. Nest level 1: comparisons performed, as given by comps. Level 2: data.frames with A vs B results stratified by cluster. Note that "Weight" will be -log10(pval) * sign of L2FC.
}
\description{
This is a modular component of the scDAPP scRNAseq pipeline. Perform DE analysis across conditions. Supports A vs B vs C pairwise (multiple conditions) comparisons. Options for Pseudobulk DE via EdgeR - LRT, or old-school scRNAseq DE via wilcoxon test.
}
\examples{
\dontrun{
# `sample_metadata` looks like this:
Sample,Condition,Code
SampleXYZ1,Control,Control1
SampleXYZ2,Control,Control2
SampleABC1,KO1,KO1_1
SampleABC2,KO1,KO1_2
SampleJKL1,KO2,KO2_1
SampleJKL2,KO2,KO2_1


# `comps` looks like this:
c1,c2
KO1,Control
KO2,Control
KO1,K2

# Run DE analysis:
m_bycluster_crosscondition_de_comps <- de_across_conditions_module(
 sobjint = sobjint,
 sample_metadata = sample_metadata,
 comps = comps,
 outdir_int = outdir_int,
 grouping_variable = 'seurat_clusters',
 Pseudobulk_mode = T
 )

 # check outputs:
 # Level 1 will be comparisons (A vs B; B vs C etc)
 names(m_bycluster_crosscondition_de_comps)
 "KO_vs_WT"

 # Level 2 will be DE results of each grouping_variable level stratified by cluster
 m_bycluster_crosscondition_de_comps$KO_vs_WT
 "cluster_1"  "cluster_2"  "cluster_3"  "cluster_4"  "cluster_5"

 #each of these is a data.frame with the DE results for this comparison in this cluster
 head(m_bycluster_crosscondition_de_comps$KO_vs_WT$cluster_1)

)

}
}
