% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_runner.R
\name{scRNAseq_pipeline_runner}
\alias{scRNAseq_pipeline_runner}
\title{scRNA-seq analysis, integration, and comparative DE pipeline}
\usage{
scRNAseq_pipeline_runner(
  datadir,
  outdir,
  use_labeltransfer,
  refdatapath,
  m_reference,
  sample_metadata,
  comps,
  Pseudobulk_mode,
  risc_reference,
  min_num_UMI,
  min_num_Feature,
  max_perc_mito,
  max_perc_hemoglobin,
  autofilter_complexity,
  autofilter_mito,
  autofilter_nUMI,
  autofilter_medianabsolutedev_threshold,
  autofilter_loess_negative_residual_threshold,
  doubletFinder,
  pcs_indi,
  res_indi,
  pcs_int,
  res_int,
  RISC_louvain_neighbors,
  DE_test,
  crossconditionDE_padj_thres,
  crossconditionDE_lfc_thres,
  pathway_padj_thres,
  species,
  workernum,
  run_ORA,
  input_seurat_obj,
  title,
  author,
  de.test.use,
  pseudobulk_metadata
)
}
\arguments{
\item{datadir}{string, path to folder containing Cellranger output folders for each sample}

\item{outdir}{string, path to output folder, will be created if doesn't already exist}

\item{use_labeltransfer}{T/F, whether to use labeltransfer for cell type prediction, default = F}

\item{refdatapath}{string, path to a Seurat object .rds file for labe latransfer, pre-processed with \code{Seurat::SCTransform()}, with a column called "Celltype" in its meta.data. Ignored if \code{use_labeltransfer} = F.}

\item{m_reference}{string, path to .rds file containing output of \code{Seurat::FindAllMarkers} run on the reference object specified above. Ignored if \code{use_labeltransfer} = F}

\item{sample_metadata}{string, path to a .csv file containing at least two columns: "Sample", matching exactly the sample names in \code{datadir}, and "Condition", giving the experiment status of that sample, such as WT or KO, Case vs Control, etc. Optionally, can provide a third column "Code" giving a nickname for each sample; this is set to "Sample_Condition" for each sample if not.}

\item{comps}{string, path to a .csv file containing two columns called "c1" and "c2". Each row will be used to compare conditions from the "sample_metadata" csv; multiple comparisons are supported.}

\item{Pseudobulk_mode}{T/F. Sets the cross-conditional analysis mode. TRUE uses pseudobulk EdgeR for DE testing and propeller for compositional analysis. FALSE uses single-cell wilcox test within Seurat for DE testing and 2-prop Z test within the \code{prop.test()} function for compositional analysis.}

\item{risc_reference}{string, name of sample to use as RISC reference sample, if not provided will automate the choice}

\item{min_num_UMI}{numeric, default is 500, if no filter is desired set to -Inf}

\item{min_num_Feature}{numeric, default is 200, if no filter is desired set to -Inf}

\item{max_perc_mito}{numeric, default is 25, if no filter is desired set to Inf}

\item{max_perc_hemoglobin}{numeric, default is 25, if no filter is desired set to Inf}

\item{autofilter_complexity}{T/F, default T, whether to filter cells with lower than expected number of genes given number of UMIs}

\item{autofilter_mito}{T/F, default T, whether to filter cells with higher than normal mito content}

\item{autofilter_nUMI}{T/F, default T, whether to filter cells with lower than normal UMI content}

\item{autofilter_medianabsolutedev_threshold}{numeric, default is 3, threshold for median abs deviation thresholding, ie cutoffs set to \verb{median +/- mad * threshold}}

\item{autofilter_loess_negative_residual_threshold}{numeric, cutoff for loess residuals applied in complexity filtering, default is -5, if you set it high (ie any higher than -2) you will probably remove many good cells.}

\item{doubletFinder}{T/F, default is T, whether to filter doublets with \code{DoubletFinder}}

\item{pcs_indi}{integer, default = 30; number of PCs to use in individual sample processing / clustering}

\item{res_indi}{numeric, default = 0.5; Louvain resolution for individual sample clustering}

\item{pcs_int}{integer, default = 30; number of PCs to use in integrated data processing / clustering}

\item{res_int}{numeric, default = 0.5 ; Louvain resolution for louvain clustring of RISC integrated dataset; see \code{scDAPP::scCluster_louvain_res()}}

\item{RISC_louvain_neighbors}{integer, default = 10; number of nearest neighbors to consider during clustering; see \code{RISC::scCluster()} or \code{scDAPP::scCluster_louvain_res()} where implementation of this is unchanged}

\item{DE_test}{a string, default is 'EdgeR-LRT' when Pseudobulk_mode is set to True, or 'wilcox' when Pseudobulk_mode is False. Can be either "DESeq2", "DESeq2-LRT", "EdgeR", "EdgeR-LRT" for pseudobulk, or any of the tests supported by the "test.use" argument in the FindMarkers function in Seurat; see \code{?Seurat::FindMarkers} for more. Note the Seurat "roc" test is not included, and some additional packages like DESeq2 may require installation.}

\item{crossconditionDE_padj_thres}{numeric, numeric; adjusted p value threshold for significant DE genes in cross condition DE; if \code{Pseudobulk_mode} is set to T default is 0.1; if \code{Pseudobulk_mode} is F default is 0.05}

\item{crossconditionDE_lfc_thres}{numeric, absolute value of LFC threshold for significant DE genes in cross condition DE; if \code{Pseudobulk_mode} is set to F default is 0 (no minimum lFC); if \code{Pseudobulk_mode} is F default is 0.25}

\item{pathway_padj_thres}{numeric, threshold for significant DE pathways via GSEA test; default is 0.1}

\item{species}{string, for example 'Homo sapiens' or 'Mus musculus', default = 'Homo sapiens'; this is for pathway analysis, see \code{msigdbr::msigdbr_species()}}

\item{workernum}{integer, number of CPU threads, default = 1}

\item{run_ORA}{T/F, default is F. Whether to run OverRepresentation Analysis (ORA) using fisher exact tests as implemented in \code{clusterProfiler::enricher()}. clusterProfiler must be installed for this. Will save table outputs.}

\item{input_seurat_obj}{T/F. If true, will read in Seurat objects from \code{datadir} with names matching the sample column of \code{sample_metadata}. Ie, if datadir contains objects called "Sample1.rds", "Sample2.rds", and psuedobulk_metadata has "Sample1" in the Sample column, only Sample1.rds will be read in. Useful for data with some preprocessing or hashed data input.}

\item{title}{string, title of HTML report. Default is "10X analysis - clustering and integration".}

\item{author}{string, name of authors which will be shown on HTML report. We recommend passing a comma separated string. Default is "Alexander Ferrena, Deyou Zheng".}

\item{de.test.use}{FOR BACKWARDS COMPATIBILITY ONLY. String, will set \code{Pseudobulk_mode} to TRUE if "pseudobulk_edgeR" is passed, or will set \code{Pseudobulk_mode} to FALSE if "wilcox" is passed.}

\item{pseudobulk_metadata}{FOR BACKWARDS COMPATIBILITY ONLY. Will be set to \code{sample_metadata}. string, path to a .csv file containing at least two columns: "Sample", matching exactly the sample names in \code{datadir}, and "Condition", giving the experiment status of that sample, such as WT or KO, Case vs Control, etc. Optionally, can provide a third column "Code" giving a nickname for each sample; this is set to "Sample_Condition" for each sample if not.}
}
\value{
Returns the warnings from the pipeline
}
\description{
This will run a pipeline of Seurat individual sample analysis, RISC integration, and comparative DE. Multiple conditions (A vs B vs C) are supported. Also, pseudobulk DE or Wilcox are available for comparative DE. Finally, there is an option to use label transfer with a reference single-cell RNAseq dataset.
}
\examples{
\dontrun{
# `sample_metadata` is a string path to a .csv file
# that looks like this, with "samples" matching
# the Spaceranger output folder names in `datadir`

#sample_metadata.csv file
Sample,Condition
SampleXYZ1,Control
SampleXYZ2,Control
SampleABC1,KO1
SampleABC2,KO1
SampleJKL1,KO2
SampleJKL2,KO2

# Optionally, can provide a third column
# to `sample_metadata` csv file like below:

#sample_metadata.csv file with optional Code column
Sample,Condition,Code
SampleXYZ1,Control,Control1
SampleXYZ2,Control,Control2
SampleABC1,KO1,KO1_1
SampleABC2,KO1,KO1_2
SampleJKL1,KO2,KO2_1
SampleJKL2,KO2,KO2_1


`comps` leads to a .csv file that looks like this:

#comps.csv file
c1,c2
KO1,Control
KO2,Control
KO1,K2


# Run pipeline like so:

scRNAseq_pipeline_runner(datadir = 'path/to/cellranger/output/folder',
               outdir = 'path/to/output/folder',
               sample_metadata = 'path/to/sample_metadata.csv'
               comps = 'path/to/comps.csv',
               Pseudobulk_mode = T
               )


# Or with options, like so:

scRNAseq_pipeline_runner(datadir = 'path/to/cellranger/output/folder',
               outdir = 'path/to/output/folder',
               sample_metadata = 'path/to/sample_metadata.csv'
               comps = 'path/to/comps.csv',
               Pseudobulk_mode = T,
               use_labeltransfer = T,
               refdatapath = 'path/to/referenceSeuratObject.rds',
               m_reference = 'path/to/reference_FindAllMarkers.rds',
               species = 'Mus musculus',
               risc_reference = 'SampleXYZ1',
               workernum = 4
               )


}
}
